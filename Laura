import java.util.*;
import javax.swing.*;
import java.awt.*; 
import java.awt.event.*; 
import java.awt.Image;



public class TicTacToePanel extends JPanel{
   boolean player1; 
   int winner = -1;
  

  // "1" paraqet x 
  // "2" paraqet O 
  
   int[][]board = new int[3][3];
   int x;
   int y;
  
  
  int player1wins=0 , player2wins =0;
  String a=new String(JOptionPane.showInputDialog("Sheno emrin e lojtarit te pare:"));
  String b=new String(JOptionPane.showInputDialog("Sheno emrin e lojtarit te dyte:"));
 

  
   JLabel turn = new JLabel("Player"+a+" Turn"); //Tekst
   JButton playAgainButton = new JButton("I want to play again"); //Butoni
  
  
   Color pink= new Color(255,175,175); // ngjyra  e lojes
   Color darkpurple = new Color(112,024,114); // ngjyra e tabeles
  
 // Konstruktori
   public TicTacToePanel(){
      setBackground(pink);
      setPreferredSize(Toolkit.getDefaultToolkit().getScreenSize());
    
  
      player1 = true;
      player1wins = 0;
      player2wins = 0;
    
    //label-i
      add(turn);
   
    //Klikimet dhe rreshtiqtej e mausit(click and drag)
      addMouseListener(new XOclick()); 
      add(playAgainButton);
    
    //Ky buton e rifillon lojen prej fillimit
      playAgainButton.addActionListener(
         new ActionListener() {
            public void actionPerformed(ActionEvent e) {
               reset();
               repaint();
            }          
         });
   }
  
  //paintComponent - this does the drawing and graphics
   public void paintComponent(Graphics g){
    
      super.paintComponent(g); //Duhet ta therrasim kete metode ne menyre qe paneli ta therrase veten
    

    
    
    // variablat e dobishme për të ripozicionuar
      int i=3;
      int j=5;
      int width=5;
      int height=300;
      int xpos=490;
      int ypos=218;
    
      if(player1 == true){
         turn.setText(a+ "'s turn");
      }else{
         turn.setText(b+"'s turn");
      }
    
    //krijojme tabelën e lojës -vija paralele 2-nga-2 - duke përdorur drawRectangle
      g.setColor(darkpurple);
    //vijat vertikale
      g.fillRoundRect(xpos + 100,220,width,height,5,5);
      g.fillRoundRect(xpos + 200,220,width,height,5,5);
    //vijat horizontale
      g.fillRoundRect(xpos,ypos + 100,height,width,5,5);
      g.fillRoundRect(xpos,ypos + 200, height,width,5,5);
    
    
      for(int x=0;x<board.length;x++){
         for(int y=0;y<board.length;y++){
            if(board[x][y]==1){   // "1" paraqet X
            //vizatimi i X - duke perdorur drawPolygon()
               g.setColor(Color.orange);
               int [] m = {xpos + 20 + 100 * x,xpos + 30 + 100 * x,xpos + 50 + 100 * x,xpos + 70 + 100 * x,xpos + 80 + 100 * x,
                  xpos + 60 + 100 * x,xpos + 80 + 100 * x,xpos + 70 + 100 * x,xpos + 50 + 100 * x,xpos + 30 + 100 * x,xpos + 20 + 100 * x,
                  xpos + 40 + 100 * x,};
               int [] n = {245 + 100 * y,245 + 100 * y,265 + 100 * y,245 + 100 * y,245 + 100 * y,
                  270 + 100 * y,295 + 100 * y,295 + 100 * y,275 + 100 * y,295 + 100 * y,295 + 100 * y,
                  270 + 100 * y};
               g.fillPolygon(m, n, 12);
            
            }else if(board[x][y]==2){   // "2" paraqet O
               
            //Vizatimi i O - duke perdoryr drawOval()
               g.setColor(Color.red);
               g.fillOval(xpos + 20 + 100 * x,240 + 100 * y,60,50);
               g.setColor(pink);
               g.fillOval(xpos + 25 + 100 * x,243 + 100 * y,50,40);
               g.setColor(Color.red);
               g.drawOval(xpos + 25 + 100 * x,243 + 100 * y,50,40);
            }
         }
      }
    
    //shpallja e fituesit
      g.setFont(new Font("Courier New", Font.ITALIC, 40));
      g.setColor(Color.black);
      if(checkwin() == 1){
         g.drawString("The winner is:"+a,330,600);
      }else if(checkwin() == 2){
         g.drawString("The winner is:"+b,330,600);
      }else if(checkDraw() == true){
         g.setFont(new Font("Monospaced", Font.BOLD, 40));
         g.drawString("Play again !",520,600);
      }
    
    
     
   }
  
  //Metoda reset-pastron tabelën e lojës,shkon përmes vargut dhe vendos gjithçka në 0, player1 në true
   public void reset(){
    
      for(int i=0;i<board.length;i++){
         for(int j=0;j<board.length;j++){
            board[i][j]=0;
         }
      }
      winner =-1;
      player1 = true;
   }
  
  //Verifikimi nese loja nuk ka fitues
   public boolean checkDraw(){
      boolean completed = true;
      for(int i=0;i<board.length;i++){
         for(int j=0;j<board.length;j++){
            if(board[i][j] == 0){
               completed = false;
            }
         }
      }
      if(completed == false){
         System.out.print("keep playing");
      }else if(completed == true){
         System.out.print("its a draw");
      }
      return completed;
   }
   
  //Verifikimi i fituesit
   public int checkwin(){
    //Shikon nese ka ndonje fitues ne menyre vertikale
    
      int m=-1;
      for(int i=0;i<board.length;i++){
         int a = board[i][0];
         int b = board[i][1];
         int c = board[i][2];
         if((a == b) && (b == c)){
            winner = a;
        
         }
      }
   
    //Horizontale
      for(int i=0;i<board.length;i++){
         int a = board[0][i];
         int b = board[1][i];
         int c = board[2][i];
         if((a == b) && (b == c)){
            winner = a;
         }
      }
    
    // diagonale \
      int a = board[0][0];
      int b = board[1][1];
      int c = board[2][2];
      if((a == b) && (b == c)){
         winner = a;
      }
      
     //diagonale / 
      a = board[0][2];
      b = board[1][1];
      c = board[2][0];
      if((a == b) && (b == c)){
         winner = a;  
      }
      return winner;
   }
 
  //Mausi
   private class XOclick implements MouseListener{
    
    
      public void mousePressed(MouseEvent event){}
      public void mouseReleased(MouseEvent event){}
      public void mouseEntered(MouseEvent event){}
      public void mouseExited(MouseEvent event){}
    
    //Mausi kryesor 
          public void mouseClicked(MouseEvent event){
         if(checkwin() > 0){ //nese winner =-1, nuk ka fitues
         //pret per lojtarin qe te luaje perseri
         
         }else{
         
         //Percaktimi i pozicionit te X dhe Y te mausit 
            int a = event.getX();
            int b = event.getY();
        
         
         
            if((a<500) || (b<200)){   //jashte linjave
               repaint();
            }else if((a>780) || (b>510)){ //jashte linja
               repaint();
            }else{
               if(a>500 && a<580){
                  x=0;
               }else if(a>600 && a<680){
                  x=1;
               }else if(a>700 && a<780){
                  x=2;
               }
               if(b>225 && b<310){
                  y=0;
               }else if(b>325 && b<410){
                  y=1;
               }else if(b>425 && b<510){
                  y=2;
               }
               if(board[x][y]== 1 || board[x][y]==2){  //Kur mbushet hapesira
                  repaint();
               }else{
                  if(player1 == true){ //Rradha e X- vizato X
                     board[x][y]= 1;
                  }
                  if(player1 == false){ //Rradha e O-vizato O
                     board[x][y]=2;
                  }
               }
            }
         //Shpallja e fituesit
            System.out.println(checkwin());
            if(checkwin() == 1){
            
               player1wins++;
            }else if(checkwin() == 2){
               player2wins++; 
            }else if(checkDraw() == true){
           
            }else
            //Tregon se rradha e cilit lojtare eshte
               if(player1 == true){ 
                  turn.setText("Player 2'S TURN");
                  player1=!player1;
               }else{
                  turn.setText("Player 1'S TURN");
                  player1=!player1;
               }
         //E bene update lojen
              repaint();
      
         }
      } 
   }
   public static void main(String[]args){
    
      JFrame frame = new JFrame("TicTacToe");
      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    
   
      frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
      frame.getContentPane().add(new TicTacToePanel());
      
      frame.setVisible(true);  
    
   }
}
